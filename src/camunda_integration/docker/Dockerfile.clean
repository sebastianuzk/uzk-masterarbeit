# Custom Camunda Platform 7 without demo processes
FROM camunda/camunda-bpm-platform:7.21.0

# Switch to root to modify files
USER root

# Remove demo applications and processes
RUN rm -rf /camunda/webapps/camunda-invoice* \
    && rm -rf /camunda/webapps/h2-console \
    && find /camunda -name "*invoice*" -type f -delete \
    && find /camunda -name "*Invoice*" -type f -delete

# Remove demo process definitions from auto-deployment
RUN find /camunda -path "*/WEB-INF/classes/META-INF/processes.xml" -delete || true \
    && find /camunda -path "*/processes" -type d -exec rm -rf {} + || true \
    && find /camunda -name "*.bpmn" -not -path "*/camunda-engine/*" -delete || true

# Clean up any remaining demo files
RUN find /camunda -type f -name "*demo*" -delete || true \
    && find /camunda -type f -name "*sample*" -delete || true

# Copy BPMN files for deployment
COPY bpmn_processes/*.bpmn /tmp/bpmn-deploy/

# Create startup script for auto-deployment
RUN echo '#!/bin/bash' > /startup-deploy.sh && \
    echo 'echo "Starting Camunda..."' >> /startup-deploy.sh && \
    echo '/camunda/camunda.sh &' >> /startup-deploy.sh && \
    echo 'CAMUNDA_PID=$!' >> /startup-deploy.sh && \
    echo 'echo "Waiting for Camunda to start..."' >> /startup-deploy.sh && \
    echo 'sleep 30' >> /startup-deploy.sh && \
    echo 'echo "Deploying BPMN files..."' >> /startup-deploy.sh && \
    echo 'for file in /tmp/bpmn-deploy/*.bpmn; do' >> /startup-deploy.sh && \
    echo '  if [ -f "$file" ]; then' >> /startup-deploy.sh && \
    echo '    echo "Deploying $file"' >> /startup-deploy.sh && \
    echo '    curl -X POST "http://localhost:8080/engine-rest/deployment/create" \' >> /startup-deploy.sh && \
    echo '         -F "deployment-name=auto-deploy-$(basename $file)" \' >> /startup-deploy.sh && \
    echo '         -F "file=@$file" || echo "Failed to deploy $file"' >> /startup-deploy.sh && \
    echo '  fi' >> /startup-deploy.sh && \
    echo 'done' >> /startup-deploy.sh && \
    echo 'echo "Auto-deployment completed"' >> /startup-deploy.sh && \
    echo 'wait $CAMUNDA_PID' >> /startup-deploy.sh && \
    chmod +x /startup-deploy.sh

# Switch back to camunda user
USER camunda

# Environment variables for clean startup
ENV DB_DRIVER=org.h2.Driver
ENV DB_URL=jdbc:h2:mem:camunda;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
ENV DB_USERNAME=sa
ENV DB_PASSWORD=sa
ENV JAVA_OPTS=-Xmx512m -XX:MaxMetaspaceSize=256m

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=5 \
    CMD curl -f http://localhost:8080/engine-rest/engine || exit 1

# Use startup script instead of default command
CMD ["/sbin/tini", "--", "/startup-deploy.sh"]